--- /Users/Kevin/GitHub/GuiMods.copy/FileSets/PatchSource/HubData.qml.orig	2025-01-12 08:25:03
+++ /Users/Kevin/GitHub/GuiMods.copy/FileSets/PatchSource/HubData.qml	2025-02-02 21:49:14
@@ -1,14 +1,28 @@
 import QtQuick 1.1
 import "utils.js" as Utils
 
+import com.victron.velib 1.0
 Item {
 	id: root
 
+    property variant sys: theSystem
+
 	property string systemPrefix: "com.victronenergy.system"
+	property string settingsPrefix: "com.victronenergy.settings"
 	property string vebusPrefix: _vebusService.valid ? _vebusService.value : ""
 
+//////// add to support VE.Direct inverters
+    property string inverterService: ""
+//////// add for grid/genset meters
+	property string gridMeterService: ""
+	property string gensetService: ""
+
 	property variant battery: _battery
 	property alias dcSystem: _dcSystem
+	property alias alternator: _alternator
+	property alias windGenerator: _windGenerator
+	property alias fuelCell: _fuelCell
+	property alias acCharger: _acCharger
 	property alias pvCharger: _pvCharger
 	property alias pvOnAcIn1: _pvOnAcIn1
 	property alias pvOnAcIn2: _pvOnAcIn2
@@ -18,8 +32,8 @@
 	property alias acInLoad: _acInLoad
 	property alias acOutLoad: _acOutLoad
 	property alias grid: _grid
+    property alias acInput: _activein
 	property alias genset: _genset
-	property alias acInput: _activein
 	property VBusItem systemType: VBusItem { bind: Utils.path(systemPrefix, "/SystemType") }
 	property bool hasGridMeter: _hasGridMeter.valid
 	property variant acSource: _acSource.value
@@ -60,6 +74,30 @@
 		property VBusItem power: VBusItem { bind: Utils.path(systemPrefix, "/Dc/Pv/Power"); unit: "W"}
 	}
 
+//////// added alternator
+	QtObject {
+		id: _alternator
+		property VBusItem power: VBusItem { bind: Utils.path(systemPrefix, "/Dc/Alternator/Power"); unit: "W"}
+	}
+
+//////// added AC charger
+	QtObject {
+		id: _acCharger
+		property VBusItem power: VBusItem { bind: Utils.path(systemPrefix, "/Dc/Charger/Power"); unit: "W"}
+	}
+
+//////// added wind generator
+	QtObject {
+		id: _windGenerator
+		property VBusItem power: VBusItem { bind: Utils.path(systemPrefix, "/Dc/WindGenerator/Power"); unit: "W"}
+	}
+
+//////// added fuel cell
+	QtObject {
+		id: _fuelCell
+		property VBusItem power: VBusItem { bind: Utils.path(systemPrefix, "/Dc/FuelCell/Power"); unit: "W"}
+	}
+
 	ObjectAcConnection {
 		id: _pvOnAcOut
 		bindPrefix: Utils.path(systemPrefix, "/Ac/PvOnOutput")
@@ -77,8 +115,11 @@
 
 	ObjectAcConnection {
 		id: _genset
-		splitPhaseL2PassthruDisabled: _splitPhaseL2Passthru.value === 0
+        splitPhaseL2PassthruDisabled: _splitPhaseL2Passthru.value === 0
 		bindPrefix: Utils.path(systemPrefix, "/Ac/Genset")
+//////// modified for VE.Direct inverter support
+        inverterSource: "/Ac/ActiveIn"
+        inverterService: sys.vebusPrefix != "" ? sys.vebusPrefix : root.inverterService
 	}
 
 	VBusItem {
@@ -91,20 +132,20 @@
 		bind: Utils.path(systemPrefix, "/Ac/Grid/DeviceType")
 	}
 
-	/*
-	 * Single Multis that can be split-phase reports NrOfPhases of 2
-	 * When L2 is disconnected from the input the output L1 and L2
-	 * are shorted. This item indicates if L2 is passed through
-	 * from AC-in to AC-out.
-	 * 1: L2 is being passed through from AC-in to AC-out.
-	 * 0: L1 and L2 are shorted together.
-	 * invalid: The unit is configured in such way that its L2 output is not used.
-	 */
+    /*
+     * Single Multis that can be split-phase reports NrOfPhases of 2
+     * When L2 is disconnected from the input the output L1 and L2
+     * are shorted. This item indicates if L2 is passed through
+     * from AC-in to AC-out.
+     * 1: L2 is being passed through from AC-in to AC-out.
+     * 0: L1 and L2 are shorted together.
+     * invalid: The unit is configured in such way that its L2 output is not used.
+     */
 
-	VBusItem {
-		id: _splitPhaseL2Passthru
-		bind: Utils.path(vebusPrefix, "/Ac/State/SplitPhaseL2Passthru")
-	}
+    VBusItem {
+        id: _splitPhaseL2Passthru
+        bind: Utils.path(vebusPrefix, "/Ac/State/SplitPhaseL2Passthru")
+    }
 
 	VBusItem {
 		id: _l2L1OutSummed
@@ -114,32 +155,42 @@
 
 	ObjectAcConnection {
 		id: _grid
-		splitPhaseL2PassthruDisabled: _splitPhaseL2Passthru.value === 0
+        splitPhaseL2PassthruDisabled: _splitPhaseL2Passthru.value === 0
 		bindPrefix: Utils.path(systemPrefix, "/Ac/Grid")
+//////// modified for VE.Direct inverter support
+        inverterSource: "/Ac/ActiveIn"
+        inverterService: sys.vebusPrefix != "" ? sys.vebusPrefix : root.inverterService
 	}
 
-	ObjectAcConnection {
-		id: _activein
-		bindPrefix: Utils.path(systemPrefix, "/Ac/ActiveIn")
-	}
+    ObjectAcConnection {
+        id: _activein
+        splitPhaseL2PassthruDisabled: _splitPhaseL2Passthru.value === 0
+        bindPrefix: Utils.path(systemPrefix, "/Ac/ActiveIn")
+//////// modified for VE.Direct inverter support
+        inverterSource: "/Ac/ActiveIn"
+        inverterService: sys.vebusPrefix != "" ? sys.vebusPrefix : root.inverterService
+    }
 
 	ObjectAcConnection {
 		id: _acLoad
 		l2AndL1OutSummed: _l2L1OutSummed.valid && (_l2L1OutSummed.value !== 0)
-		isAcOutput: true
+        isAcOutput: true
 		bindPrefix: Utils.path(systemPrefix, "/Ac/Consumption")
+//////// modified for VE.Direct inverter support
+        inverterSource: "/Ac/Out"
+        inverterService: sys.vebusPrefix != "" ? sys.vebusPrefix : root.inverterService
 	}
 
 	ObjectAcConnection {
 		id: _acOutLoad
 		l2AndL1OutSummed: _l2L1OutSummed.valid && (_l2L1OutSummed.value !== 0)
-		isAcOutput: true
+        isAcOutput: true
 		bindPrefix: Utils.path(systemPrefix, "/Ac/ConsumptionOnOutput")
 	}
 
 	ObjectAcConnection {
 		id: _acInLoad
-		splitPhaseL2PassthruDisabled: _splitPhaseL2Passthru.value === 0
+        splitPhaseL2PassthruDisabled:_splitPhaseL2Passthru.value === 0
 		bindPrefix: Utils.path(systemPrefix, "/Ac/ConsumptionOnInput")
 	}
 
@@ -167,4 +218,47 @@
 		id: _dcSystem
 		property VBusItem power: VBusItem { bind: Utils.path(systemPrefix, "/Dc/System/Power"); unit: "W"}
 	}
+
+//////// add to support for adjustable watt / killowatt display switching
+	VBusItem { id: kwThresholdItem; bind: Utils.path(settingsPrefix, "/Settings/GuiMods/KilowattThreshold") }
+	property int kilowattThreshold: kwThresholdItem.valid ? kwThresholdItem.value : 1000
+
+//////// add to support VE.Direct inverters
+//////// and grid/genset meters
+    Component.onCompleted: discoverServices()
+
+    // When new service is found check if is a tank sensor
+    Connections
+    {
+        target: DBusServices
+        onDbusServiceFound: addService(service)
+    }
+    function addService(service)
+    {
+        switch (service.type)
+        {
+        case DBusService.DBUS_SERVICE_INVERTER:
+            if (inverterService === "")
+                inverterService = service.name;
+            break;;
+		case DBusService.DBUS_SERVICE_GRIDMETER:
+            if (gridMeterService === "")
+				gridMeterService = service.name;
+            break;;
+		case DBusService.DBUS_SERVICE_GENSET:
+            if (gensetService === "")
+				gensetService = service.name;
+            break;;
+        }
+    }
+
+    // Check available services inverter services
+    function discoverServices()
+    {
+		inverterService = ""
+		gridMeterService = ""
+		gensetService = ""
+        for (var i = 0; i < DBusServices.count; i++)
+                addService(DBusServices.at(i))
+    }
 }
