#!/bin/bash

# this script provides the following modificaitons:
#   move Settings and Notifications to the top of the list man page
#   hides the Tiles Overview
#   replaces the Mobile Overview with an enhanced version
#
# each of these modifications is optional and can be selected
#   at install time
#
# Note: both Enhanced Mobile Overview and hiding the Tile Overview modify main.qml
# so order of operations is important.
# The code also relies on a second request to backup an active file will not touch an existing backup

qmlDir=/opt/victronenergy/gui/qml
deviceListFile="$qmlDir/PageMain.qml"
mainPagesFile="$qmlDir/main.qml"
overviewMobileEnhancedFile="$qmlDir/OverviewMobileEnhanced.qml"
reasonMessageFile="$qmlDir/SystemReasonMessage.qml"
overviewAcValues="$qmlDir/OverviewAcValues.qml"
objectAcConnection="$qmlDir/ObjectAcConnection.qml"
overviewHub="$qmlDir/OverviewHub.qml"
overviewSolarCharger="$qmlDir/OverviewSolarCharger.qml"
tileTankFile="$qmlDir/TileTank.qml"
powerGaugeFile="$qmlDir/PowerGauge.qml"
powerGaugeBatteryFile="$qmlDir/PowerGaugeBattery.qml"
multiFile="$qmlDir/Multi.qml"
inverterPopupFile="$qmlDir/InverterModePopUp.qml"

installEnhancedTank=false

typeset -i inverterPeakPower
typeset -i inverterContiuousPower
typeset -i inverterCautionPower
typeset -i systemPowerLimit
typeset -i maxDischargeCurrent

# log file for this package
# if not a null string, options to display the log file are presented
packageLogFile="/var/log/gui/current"

#### following lines incorporate SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.
    
source "/data/SetupHelper/CommonResources"

#### end of lines to include SetupHelper

#### running manually and OK to proceed - prompt for input
if [ $scriptAction == 'NONE' ] ; then
    # display innitial message
    echo
    echo "This package modifies the GUI in several areas"
    echo "All modificaitons are explained below with a choice to install each one individually"

    standardActionPrompt 'MORE_PROMPTS'

    # prompt for remaining parameters needed for activation
    # PROMPT is left over from a previous version of SetupHelper
    #  it is included here for backward compatibility
    if [ $scriptAction == 'NONE' ] || [ $scriptAction == 'PROMPT' ]; then
        echo
        echo "The Enhanced overview includes the following changes:"
        echo "  1) Tiles are arranged to more cloesly follow the power flow through the system"
        echo "  2) Voltage, current and frequency values are added to the AC in and out tiles"
        echo "  3) Battery remaining time is added to the Battery tile"
        echo "  4) ESS reason codes are replaced with a text version to make them more meaningful"
        echo "  5) ESS reason text and other notifications are combined into a single "marquee" line"
        echo "  6) The pump switch is hidden unless the Venus relay is configured for pump control"
        echo "  7) AC Mode switch includes INVERTER ONLY mode"
        echo
        echo "Tank enhancements are also included:"
        echo "  1) Bar text turns red and indicates NO RESPONSE for sensor connection errors"
        echo "  2) Color of bar turns red on limits"
        echo "  3) If space is limited, bar graph height and associated text are reduced"
        echo "  4) Added custom tank name"
        echo "  5) Added absolute quantity (e.g., gallons) next to %"
        echo "  6) List scrolls if all tanks don't fit"
        echo        
        yesNoPrompt "Do you wish to install the Enhanced Mobile Overview Page? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/useEnhancedOverview
       else
            rm -f $setupOptionsDir/useEnhancedOverview
        fi
        echo
        yesNoPrompt "Do you wish to move Settings and Notifications to the top of the Device List? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/moveSettings
       else
            rm -f $setupOptionsDir/moveSettings
        fi
        echo
        yesNoPrompt "Do you wish to hide the Tile Overview? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/hideTileOverview
       else
            rm -f $setupOptionsDir/hideTileOverview
        fi
        echo
        echo "The Enhanced flow includes the following changes:"
        echo "  1) Voltage, current and frequency are shown for AC in and out"
        echo "  2) Current is shown for DC Loads"
        echo "  3) Tanks are shown along the bottom of the page"
        echo "      List scrolls horizontally if necessary"
        echo "  4) Other Tank enhancements listed above are also included"
        echo "  5) PV Charger tile shows voltage and current"
        echo "  6) Time is displayed in inverter icon"
        echo "  7) Power bar graphs for AC in/out and inverter"
        echo "  8) Adds inverter mode to the inverter icon"
        echo "  9) Popups to change the AC input current limit and inverter mode"
        echo        
        yesNoPrompt "Do you wish install flow Overview enhancements? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/enhancedFlow
       else
            rm -f $setupOptionsDir/enhancedFlow
        fi
        if [ -f $setupOptionsDir/enhancedFlow ]; then
            echo
            echo "Power bar gauges require inverter power limits"
            echo " you will need to get this informaiton from the inverter's spec sheet"
            echo " You also need to input the output power limit (if any) based on the master AC breaker size"
            echo " These values determine the color of the gauge scale and background regions"
            echo
            yesNoPrompt "Do you wish install show power gauges? (y/n): "
            if $yesResponse ; then
                while true ; do
                    read -p "Enter a value for caution level of the power graph: " inverterCautionPower
                    read -p "Enter the inverter's MAXIMUM CONTINUOUS power spec: " inverterContiuousPower
                    read -p "Enter the inverter's PEAK power spec: " inverterPeakPower
                    read -p "Enter the maximum power of your breaker panel (0 to disable this limit): " systemPowerLimit
                    read -p "Enter the battery bank maximum discharge current: " maxDischargeCurrent
                    echo
                    if (( $inverterPeakPower >= $inverterContiuousPower )) && (( $inverterContiuousPower >= $inverterCautionPower )); then
                        break;
                    else
                        echo "Error: values must increase in order shown below - reenter all"
                        echo "  caution: $inverterCautionPower  continuous: $inverterContiuousPower  peak: $inverterPeakPower"
                        echo
                    fi
                done
                echo $inverterPeakPower > $setupOptionsDir/inverterPeakPower
                echo $inverterContiuousPower > $setupOptionsDir/inverterContiuousPower
                echo $inverterCautionPower > $setupOptionsDir/inverterCautionPower
                echo $systemPowerLimit > $setupOptionsDir/systemPowerLimit
                echo $maxDischargeCurrent > $setupOptionsDir/maxDischargeCurrent
            else
                echo "0" > $setupOptionsDir/inverterPeakPower
                echo "0" > $setupOptionsDir/inverterContiuousPower
                echo "0" > $setupOptionsDir/inverterCautionPower
                echo "0" > $setupOptionsDir/systemPowerLimit
                echo "0" > $setupOptionsDir/maxDischargeCurrent
            fi
        fi
        scriptAction='INSTALL'
    fi
fi

#### installing
if [ $scriptAction == 'INSTALL' ] ; then
    if [ -f "$setupOptionsDir/moveSettings" ]; then
        logMessage "Moving Settings & Notifications to top of Device List"
        updateActiveFile "$deviceListFile"
    else
        restoreActiveFile "$deviceListFile"
    fi
    if [ -f "$setupOptionsDir/hideTileOverview" ]; then
        logMessage "Hiding the Tile Overview"
        updateActiveFile "$mainPagesFile"
    else
        restoreActiveFile "$mainPagesFile"
    fi
    if [ -f "$setupOptionsDir/useEnhancedOverview" ] ; then
        logMessage "installing Enhanced Mobile Overview"
        updateActiveFile "$overviewMobileEnhancedFile"
        logMessage "installing System Reason Message"
        updateActiveFile "$reasonMessageFile"
        installEnhancedTank=true

        # modify main.qml to show enhanced mobile overview
        if [ $(grep -c OverviewMobileEnhanced.qml "$mainPagesFile") == 0 ]; then
            backupActiveFile "$mainPagesFile"
            sed -i -e 's/OverviewMobile.qml/OverviewMobileEnhanced.qml/' "$mainPagesFile"
            filesUpdated=true
        fi
    else
        restoreActiveFile "$overviewMobileEnhancedFile"
        restoreActiveFile "$reasonMessageFile"
        if [ $(grep -c OverviewMobileEnhanced.qml "$mainPagesFile") != 0 ]; then
            sed -i -e 's/OverviewMobileEnhanced.qml/OverviewMobile.qml/' "$mainPagesFile"
            filesUpdated=true
        fi
    fi
    if [ -f "$setupOptionsDir/enhancedFlow" ]; then
        logMessage "installing enhanced Flow overview"
        updateActiveFile "$overviewAcValues"
        updateActiveFile "$objectAcConnection"
        updateActiveFile "$overviewHub"
        updateActiveFile "$overviewSolarCharger"
        updateActiveFile "$powerGaugeFile"
        updateActiveFile "$powerGaugeBatteryFile"
        updateActiveFile "$multiFile"
        updateActiveFile "$inverterPopupFile"
        logMessage "creating inverter power limit settings"
        dbus -y com.victronenergy.settings /Settings AddSettings\
            '%[{"path": "/InverterLimits/PeakPower", "type":"float", "default":0},\
            {"path":"/InverterLimits/ContiuousPower", "type":"float", "default":0},\
            {"path":"/InverterLimits/CautionPower", "type":"float", "default":0},\
            {"path":"/InverterLimits/OutputPowerLimit", "type":"float", "default":0},\
            {"path":"/SystemSetup/MaxDischargeCurrent", "type":"float", "default":0} ]'  > /dev/null
        if [ -f $setupOptionsDir/inverterPeakPower ]; then
            inverterPeakPower=$(cat $setupOptionsDir/inverterPeakPower)
        else
            inverterPeakPower=0
        fi
        if [ -f $setupOptionsDir/inverterContiuousPower ] ; then
            inverterContiuousPower=$(cat $setupOptionsDir/inverterContiuousPower)
        else
            inverterContiuousPower=0
        fi
        if [ $setupOptionsDir/inverterContiuousPower ]; then
            inverterCautionPower=$(cat $setupOptionsDir/inverterCautionPower)
        else
            inverterCautionPower=0
        fi

        if [ -f $setupOptionsDir/maxDischargeCurrent ]; then
            maxDischargeCurrent=$(cat $setupOptionsDir/maxDischargeCurrent)
        else
            maxDischargeCurrent=0
        fi
        if [ -f $setupOptionsDir/inverterCautionPower ]; then
            systemPowerLimit=$(cat $setupOptionsDir/systemPowerLimit)
        else
            systemPowerLimit=0
        fi
        if (( $inverterPeakPower > 0)); then
            logMessage "setting power limits caution: $inverterCautionPower  continuous: $inverterContiuousPower  peak: $inverterPeakPower  outputPower: $systemPowerLimit"
            dbus -y com.victronenergy.settings /Settings/InverterLimits/PeakPower SetValue $inverterPeakPower > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/ContiuousPower SetValue $inverterContiuousPower > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/CautionPower SetValue $inverterCautionPower > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/OutputPowerLimit SetValue $systemPowerLimit > /dev/null
            logMessage "setting battery discharge limit: $maxDischargeCurrent"
            dbus -y com.victronenergy.settings /Settings/SystemSetup/MaxDischargeCurrent SetValue $maxDischargeCurrent > /dev/null
        else
            logMessage "power gauges not enabled"
            dbus -y com.victronenergy.settings /Settings/InverterLimits/PeakPower SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/SystemSetup/MaxDischargeCurrent SetValue 0 > /dev/null
        fi
        # enhanced flow requires enhanced tank tile
        installEnhancedTank=true
    else
        restoreActiveFile "$overviewAcValues"
        restoreActiveFile "$objectAcConnection"
        restoreActiveFile "$overviewHub"
        restoreActiveFile "$overviewSolarCharger"
        restoreActiveFile "$powerGaugeFile"
        restoreActiveFile "$powerGaugeBatteryFile"
        restoreActiveFile "$multiFile"
        restoreActiveFile "$inverterPopupFile"
        dbus -y com.victronenergy.settings /Settings RemoveSettings\
            '%["InverterLimits/PeakPower", "InverterLimits/ContiuousPower",\
            "InverterLimits/CautionPower", "InverterLimits/OutputPowerLimit",\
            "SystemSetup/MaxDischargeCurrent" ]' > /dev/null
    fi
    if $installEnhancedTank ; then
        logMessage "installing enhanced Tank tile"
        updateActiveFile "$tileTankFile"
    # restore tank file in case install was run again manually
    else
        restoreActiveFile "$tileTankFile"
    fi
    logMessage "++ Package installed"
fi

# uninstalling - check scriptAction again
# if an install step failed package needs to be removed
if [ $scriptAction == 'UNINSTALL' ] ; then
    restoreActiveFile "$deviceListFile"
    restoreActiveFile "$mainPagesFile"
    restoreActiveFile "$overviewMobileEnhancedFile"
    restoreActiveFile "$reasonMessageFile"
    restoreActiveFile "$overviewAcValues"
    restoreActiveFile "$objectAcConnection"
    restoreActiveFile "$overviewHub"
    restoreActiveFile "$overviewSolarCharger"
    restoreActiveFile "$tileTankFile"
    restoreActiveFile "$powerGaugeFile"
    restoreActiveFile "$powerGaugeBatteryFile"
    restoreActiveFile "$multiFile"
    restoreActiveFile "$inverterPopupFile"
    dbus -y com.victronenergy.settings /Settings RemoveSettings\
            '%["InverterLimits/PeakPower", "InverterLimits/ContiuousPower",\
            "InverterLimits/CautionPower", "InverterLimits/OutputPowerLimit",\
            "SystemSetup/MaxDischargeCurrent" ]' > /dev/null
    logMessage "++ Package uninstalled"
fi

if $filesUpdated ; then
    restartGui=true
fi

# thats all folks - SCRIPT EXITS INSIDE THE FUNCTION
endScript
