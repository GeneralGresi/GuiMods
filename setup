#!/bin/bash

# this script provides the following modificaitons:
#   move Settings and Notifications to the top of the list man page
#   hides the Tiles Overview
#   replaces the Mobile Overview with an enhanced version
#
# each of these modifications is optional and can be selected
#   at install time
#
# Note: both Enhanced Mobile Overview and hiding the Tile Overview modify main.qml
# so order of operations is important.
# The code also relies on a second request to backup an active file will not touch an existing backup

qmlDir=/opt/victronenergy/gui/qml
deviceListFile="$qmlDir/PageMain.qml"
mainPagesFile="$qmlDir/main.qml"
overviewMobileEnhancedFile="$qmlDir/OverviewMobileEnhanced.qml"
reasonMessageFile="$qmlDir/SystemReasonMessage.qml"
overviewAcValues="$qmlDir/OverviewAcValues.qml"
objectAcConnection="$qmlDir/ObjectAcConnection.qml"
overviewHub="$qmlDir/OverviewHub.qml"
overviewSolarCharger="$qmlDir/OverviewSolarCharger.qml"
tileTankFile="$qmlDir/TileTank.qml"
powerGaugeFile="$qmlDir/PowerGauge.qml"
powerGaugeBatteryFile="$qmlDir/PowerGaugeBattery.qml"
multiFile="$qmlDir/Multi.qml"
inverterPopupFile="$qmlDir/InverterModePopUp.qml"
acCurrentLimitPopUpFile="$qmlDir/AcCurrentLimitPopUp.qml"
tileTempFile="$qmlDir/TileTemp.qml"

installEnhancedTank=false

typeset -i inverterPeakPower
typeset -i inverterContiuousPower
typeset -i inverterCautionPower
typeset -i systemPowerLimit
typeset -i maxDischargeCurrent
typeset -i acCurrentLimitPreset1
typeset -i acCurrentLimitPreset2
typeset -i acCurrentLimitPreset3
typeset -i acCurrentLimitPreset4
typeset -i pvChargerMaxPower


# log file for this package
# if not a null string, options to display the log file are presented
packageLogFile="/var/log/gui/current"

#### following lines incorporate SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.
    
source "/data/SetupHelper/CommonResources"

#### end of lines to include SetupHelper

#### running manually and OK to proceed - prompt for input
if [ $scriptAction == 'NONE' ] ; then
    # display innitial message
    echo
    echo "This package modifies the GUI in several areas"
    echo "All modificaitons are explained below with a choice to install each one individually"

    standardActionPrompt 'MORE_PROMPTS'

    # prompt for remaining parameters needed for activation
    # PROMPT is left over from a previous version of SetupHelper
    #  it is included here for backward compatibility
    if [ $scriptAction == 'NONE' ] || [ $scriptAction == 'PROMPT' ]; then
        echo
        echo "The Enhanced overview includes the following changes:"
        echo "  1) Tiles are arranged to more cloesly follow the power flow through the system"
        echo "  2) Voltage, current and frequency values are added to the AC in and out tiles"
        echo "  3) Battery remaining time is added to the Battery tile"
        echo "  4) ESS reason codes are replaced with a text version to make them more meaningful"
        echo "  5) ESS reason text and other notifications are combined into a single "marquee" line"
        echo "  6) The pump switch is hidden unless the Venus relay is configured for pump control"
        echo "  7) AC Mode switch includes INVERTER ONLY mode"
        echo
        echo "Tank enhancements are also included:"
        echo "  1) Bar text turns red and indicates NO RESPONSE for sensor connection errors"
        echo "  2) Color of bar turns red on limits"
        echo "  3) If space is limited, bar graph height and associated text are reduced"
        echo "  4) Added custom tank name"
        echo "  5) Added absolute quantity (e.g., gallons) next to %"
        echo "  6) List scrolls if all tanks don't fit"
        echo        
        yesNoPrompt "Do you wish to install the Enhanced Mobile Overview Page? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/useEnhancedOverview
       else
            rm -f $setupOptionsDir/useEnhancedOverview
        fi
        echo
        yesNoPrompt "Do you wish to move Settings and Notifications to the top of the Device List? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/moveSettings
       else
            rm -f $setupOptionsDir/moveSettings
        fi
        echo
        yesNoPrompt "Do you wish to hide the Tile Overview? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/hideTileOverview
       else
            rm -f $setupOptionsDir/hideTileOverview
        fi
        echo
        echo "The Enhanced flow includes the following changes:"
        echo "  1) Voltage, current and frequency are shown for AC in and out"
        echo "  2) Current is shown for DC Loads"
        echo "  3) Tanks are shown along the bottom of the page"
        echo "      List scrolls horizontally if necessary"
        echo "  4) Other Tank enhancements listed above are also included"
        echo "  5) PV Charger tile shows voltage and current"
        echo "  6) Time is displayed in inverter icon"
        echo "  7) Power bar graphs for AC in/out and inverter"
        echo "  8) Adds inverter mode to the inverter icon"
        echo "  9) Popups to change the AC input current limit and inverter mode"
        echo " 10) AC input current limit presets"
        echo        
        yesNoPrompt "Do you wish install Flow Overview enhancements? (y/n): "
        if $yesResponse ; then
            touch $setupOptionsDir/enhancedFlow
        else
            rm -f $setupOptionsDir/enhancedFlow
        fi
        if [ -f $setupOptionsDir/enhancedFlow ]; then
            if [ -e "$setupOptionsDir/inverterPeakPower" ]; then
                echo
                echo "The following power guage limits were found from a previous install"
                echo "  Inverter Caution: $(cat "$setupOptionsDir/inverterCautionPower")"
                echo "  Inverter Max Continuous: $(cat "$setupOptionsDir/inverterContiuousPower")"
                echo "  Inverter Peak: $(cat "$setupOptionsDir/inverterPeakPower")"
                echo "  Battery Max Discharge: $(cat "$setupOptionsDir/maxDischargeCurrent")"
                echo "  Max PV (Solar): $(cat "$setupOptionsDir/pvChargerMaxPower")"
                echo
                yesNoPrompt "Do you wish to use these limits? (y/n): "
                if $yesResponse ; then
                    changeLimits=false
                else
                    changeLimits=true
                fi
            else
                changeLimits=true
            fi
            if $changeLimits ; then
                echo
                echo "Power bar gauges require power limits be set manually"
                echo "  You will need to get this informaiton from the inverter's spec sheet"
                echo "  You also need to input the output power limit (if any) based on the master AC breaker size"
                echo "  These values determine the gauge's scale and background regions"
                echo
                yesNoPrompt "Do you wish to show power gauges? (y/n): "
                if $yesResponse ; then
                    while true ; do
                        read -p "Enter a value for caution level of the power graph: " inverterCautionPower
                        read -p "Enter the inverter's MAXIMUM CONTINUOUS power spec: " inverterContiuousPower
                        read -p "Enter the inverter's PEAK power spec: " inverterPeakPower
                        read -p "Enter the maximum power of your breaker panel (0 to disable this limit): " systemPowerLimit
                        read -p "Enter the battery bank maximum discharge current: " maxDischargeCurrent
                        read -p "Enter the maximum power of all PV chargers in the system: " pvChargerMaxPower
                        echo
                        if (( $inverterPeakPower >= $inverterContiuousPower )) && (( $inverterContiuousPower >= $inverterCautionPower )); then
                            break;
                        else
                            echo "Error: values must increase in order shown below - reenter all"
                            echo "  caution: $inverterCautionPower  continuous: $inverterContiuousPower  peak: $inverterPeakPower"
                            echo
                        fi
                    done
                    echo $inverterPeakPower > "$setupOptionsDir/inverterPeakPower"
                    echo $inverterContiuousPower > "$setupOptionsDir/inverterContiuousPower"
                    echo $inverterCautionPower > $setupOptionsDir/inverterCautionPower
                    echo $systemPowerLimit > $setupOptionsDir/systemPowerLimit
                    echo $maxDischargeCurrent > "$setupOptionsDir/maxDischargeCurrent"
                    echo $pvChargerMaxPower > "$setupOptionsDir/pvChargerMaxPower"
                else
                    rm -f "$setupOptionsDir/inverterPeakPower"
                    rm -f "$setupOptionsDir/inverterContiuousPower"
                    rm -f "$setupOptionsDir/inverterCautionPower"
                    rm -f "$setupOptionsDir/systemPowerLimit"
                    rm -f "$setupOptionsDir/maxDischargeCurrent"
                    rm -f "$setupOptionsDir/pvChargerMaxPower"
                fi
            fi
            echo
            echo "AC current limit presets offer a quick way to change the AC input current limit"
            echo
            if [ -e "$setupOptionsDir/acCurrentLimitPresets" ]; then
                echo "The following presets were found from a previous install"
                echo "  $(cat "$setupOptionsDir/acCurrentLimitPresets")"
                echo
                yesNoPrompt "Do you wish to use these presets? (y/n): "
                if $yesResponse ; then
                    changePresets=false
                else
                    changePresets=true
                fi
            else
                changePresets=true
            fi
            if $changePresets ; then
                yesNoPrompt "Do you wish set presets for AC current limit? (y/n): "
                if $yesResponse ; then
                    echo "For each preset enter the value desired (0 disables the associated preset button)"
                    read -p "Preset 1: " acCurrentLimitPreset1
                    read -p "Preset 2: " acCurrentLimitPreset2
                    read -p "Preset 3: " acCurrentLimitPreset3
                    read -p "Preset 4: " acCurrentLimitPreset4
                    echo $acCurrentLimitPreset1  $acCurrentLimitPreset2 $acCurrentLimitPreset3 $acCurrentLimitPreset4> "$setupOptionsDir/acCurrentLimitPresets"
                else
                    rm -f "$setupOptionsDir/acCurrentLimitPresets"
                fi
            fi
        fi
        
        echo
        while true ; do
            read -p "Select the desired temperature scale (C/F/b (both)): " tempScale
            case $tempScale in
                [cC]*)
                    echo "1" > "$setupOptionsDir/temperatureScale"
                    break
                    ;;
                [fF]*)
                    echo "2" > "$setupOptionsDir/temperatureScale"
                    break
                    ;;
                 [bB]*)
                    echo "0" > "$setupOptionsDir/temperatureScale"
                    break
                    ;;
                *)
                   ;;
            esac
        done

        echo "Beginning with Venus v2.70~16, names for NMEA2000 tanks won't fit in the available space"
        echo "If custom names exist, they are used"
        echo "The long names can be shortened to two words (one word for compact tiles)"
        echo "  and Waste replaced with Gray"
        yesNoPrompt "Do you wish to shorten NMEA2000 tank names? (y/n): "
        if $yesResponse ; then
            touch "$setupOptionsDir/shortenTankNames"
        else
            rm -f "$setupOptionsDir/shortenTankNames"
        fi

        scriptAction='INSTALL'
    fi
fi

#### installing
if [ $scriptAction == 'INSTALL' ] ; then
    # set defaults if options have not been set before
    # all modifications enabled, default power limits, default input current limit presets
    if [ ! -f "$setupOptionsDir/optionsSet" ]; then
        touch "$setupOptionsDir/moveSettings"
        touch "$setupOptionsDir/hideTileOverview"
        touch "$setupOptionsDir/useEnhancedOverview"
        echo "3000" "$setupOptionsDir/inverterPeakPower"
        echo "2000" "$setupOptionsDir/inverterContiuousPower"
        echo "1400" "$setupOptionsDir/inverterCautionPower"
        echo "3600" "$setupOptionsDir/systemPowerLimit"
        echo "200" "$setupOptionsDir/maxDischargeCurrent"
        echo "360" "$setupOptionsDir/pvChargerMaxPower"
        echo "10 15 20 30" > "$setupOptionsDir/acCurrentLimitPresets"
        echo "0" "$setupOptionsDir/temperatureScale"
        touch "$setupOptionsDir/optionsSet"
        touch "$setupOptionsDir/shortenTankNames"
    fi
    if [ -f "$setupOptionsDir/moveSettings" ]; then
        logMessage "Moving Settings & Notifications to top of Device List"
        updateActiveFile "$deviceListFile"
    else
        restoreActiveFile "$deviceListFile"
    fi
    if [ -f "$setupOptionsDir/hideTileOverview" ]; then
        logMessage "Hiding the Tile Overview"
        updateActiveFile "$mainPagesFile"
    else
        restoreActiveFile "$mainPagesFile"
    fi
    if [ -f "$setupOptionsDir/useEnhancedOverview" ] ; then
        logMessage "installing Enhanced Mobile Overview"
        updateActiveFile "$overviewMobileEnhancedFile"
        logMessage "installing System Reason Message"
        updateActiveFile "$reasonMessageFile"
        installEnhancedTank=true

        # modify main.qml to show enhanced mobile overview
        if [ $(grep -c OverviewMobileEnhanced.qml "$mainPagesFile") == 0 ]; then
            backupActiveFile "$mainPagesFile"
            sed -i -e 's/OverviewMobile.qml/OverviewMobileEnhanced.qml/' "$mainPagesFile"
            filesUpdated=true
        fi
    else
        restoreActiveFile "$overviewMobileEnhancedFile"
        restoreActiveFile "$reasonMessageFile"
        if [ $(grep -c OverviewMobileEnhanced.qml "$mainPagesFile") != 0 ]; then
            sed -i -e 's/OverviewMobileEnhanced.qml/OverviewMobile.qml/' "$mainPagesFile"
            filesUpdated=true
        fi
    fi
    if [ -f "$setupOptionsDir/enhancedFlow" ]; then
        logMessage "installing enhanced Flow overview"
        updateActiveFile "$overviewAcValues"
        updateActiveFile "$objectAcConnection"
        updateActiveFile "$overviewHub"
        updateActiveFile "$overviewSolarCharger"
        updateActiveFile "$powerGaugeFile"
        updateActiveFile "$powerGaugeBatteryFile"
        updateActiveFile "$multiFile"
        updateActiveFile "$inverterPopupFile"
        updateActiveFile "$acCurrentLimitPopUpFile"
        logMessage "creating inverter power limit settings"
        dbus -y com.victronenergy.settings /Settings AddSettings\
            '%[{"path": "/InverterLimits/PeakPower", "type":"float", "default":0},\
            {"path":"/InverterLimits/ContiuousPower", "type":"float", "default":0},\
            {"path":"/InverterLimits/CautionPower", "type":"float", "default":0},\
            {"path":"/InverterLimits/OutputPowerLimit", "type":"float", "default":0},\
            {"path":"/SystemSetup/MaxDischargeCurrent", "type":"float", "default":0},\
            {"path":"/InverterLimits/AcCurrentLimit/Preset1", "type":"float", "default":0},\
            {"path":"/InverterLimits/AcCurrentLimit/Preset1", "type":"float", "default":0},\
            {"path":"/InverterLimits/AcCurrentLimit/Preset2", "type":"float", "default":0},\
            {"path":"/InverterLimits/AcCurrentLimit/Preset3", "type":"float", "default":0},\
            {"path":"/InverterLimits/AcCurrentLimit/Preset4", "type":"float", "default":0},\
            {"path":"/PvCharger/MaxPower", "type":"float", "default":0},\
            {"path":"/GuiMods/ShortenTankNames", "type":"int", "default":0},\
            {"path":"/GuiMods/TemperatureScale", "type":"int", "default":0} ]'  > /dev/null
        if [ -f "$setupOptionsDir/inverterPeakPower" ]; then
            inverterPeakPower=$(cat "$setupOptionsDir/inverterPeakPower")
        else
            inverterPeakPower=0
        fi
        if [ -f "$setupOptionsDir/inverterContiuousPower" ] ; then
            inverterContiuousPower=$(cat "$setupOptionsDir/inverterContiuousPower")
        else
            inverterContiuousPower=0
        fi
        if [ "$setupOptionsDir/inverterContiuousPower" ]; then
            inverterCautionPower=$(cat $setupOptionsDir/inverterCautionPower)
        else
            inverterCautionPower=0
        fi
        if [ -f $setupOptionsDir/inverterCautionPower ]; then
            systemPowerLimit=$(cat $setupOptionsDir/systemPowerLimit)
        else
            systemPowerLimit=0
        fi

        if [ -f "$setupOptionsDir/maxDischargeCurrent" ]; then
            maxDischargeCurrent=$(cat "$setupOptionsDir/maxDischargeCurrent")
        else
            maxDischargeCurrent=0
        fi
        if [ -f "$setupOptionsDir/pvChargerMaxPower" ]; then
            pvChargerMaxPower=$(cat "$setupOptionsDir/pvChargerMaxPower")
        else
            pvChargerMaxPower=0
        fi
        if (( $inverterPeakPower > 0)); then
            logMessage "setting power limits caution: $inverterCautionPower  continuous: $inverterContiuousPower  peak: $inverterPeakPower  outputPower: $systemPowerLimit"
            dbus -y com.victronenergy.settings /Settings/InverterLimits/PeakPower SetValue $inverterPeakPower > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/ContiuousPower SetValue $inverterContiuousPower > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/CautionPower SetValue $inverterCautionPower > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/OutputPowerLimit SetValue $systemPowerLimit > /dev/null
            logMessage "setting battery discharge limit: $maxDischargeCurrent"
            dbus -y com.victronenergy.settings /Settings/SystemSetup/MaxDischargeCurrent SetValue $maxDischargeCurrent > /dev/null
            logMessage "setting PV charger limit: $pvChargerMaxPower"
            dbus -y com.victronenergy.settings /Settings/PvCharger/MaxPower SetValue $pvChargerMaxPower > /dev/null
        else
            logMessage "power gauges not enabled"
            dbus -y com.victronenergy.settings /Settings/InverterLimits/PeakPower SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/ContiuousPower SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/CautionPower SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/SystemSetup/MaxDischargeCurrent SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/PvCharger/MaxPower SetValue 0 > /dev/null
        fi
        if [ -f "$setupOptionsDir/acCurrentLimitPresets" ]; then
            read acCurrentLimitPreset1 acCurrentLimitPreset2 acCurrentLimitPreset3 acCurrentLimitPreset4 <<< $(cat "$setupOptionsDir/acCurrentLimitPresets")
            logMessage "setting AC current limit presets: $acCurrentLimitPreset1 $acCurrentLimitPreset2 $acCurrentLimitPreset3 $acCurrentLimitPreset4"
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset1 SetValue $acCurrentLimitPreset1 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset2 SetValue $acCurrentLimitPreset2 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset3 SetValue $acCurrentLimitPreset3 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset4 SetValue $acCurrentLimitPreset4 > /dev/null
        else
            logMessage "current presets not set"
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset1 SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset2 SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset3 SetValue 0 > /dev/null
            dbus -y com.victronenergy.settings /Settings/InverterLimits/AcCurrentLimit/Preset4 SetValue 0 > /dev/null
        fi
        if [ -f "$setupOptionsDir/temperatureScale" ]; then
            temperatureScale=$(cat "$setupOptionsDir/temperatureScale")
        else
            temperatureScale=0
        fi
        if [ $temperatureScale == 1 ]; then
            logMessage "setting Temperature Scale to °C"
        elif [ $temperatureScale == 2 ]; then
            logMessage "setting Temperature Scale to °F"
        else
            logMessage "setting Temperature Scale to both °C and °F"
        fi
        dbus -y com.victronenergy.settings /Settings/GuiMods/TemperatureScale SetValue $temperatureScale > /dev/null

        # enhanced flow requires enhanced tank tile
        installEnhancedTank=true
    else
        restoreActiveFile "$overviewAcValues"
        restoreActiveFile "$objectAcConnection"
        restoreActiveFile "$overviewHub"
        restoreActiveFile "$overviewSolarCharger"
        restoreActiveFile "$powerGaugeFile"
        restoreActiveFile "$powerGaugeBatteryFile"
        restoreActiveFile "$multiFile"
        restoreActiveFile "$inverterPopupFile"
        restoreActiveFile "$acCurrentLimitPopUpFile"
        dbus -y com.victronenergy.settings /Settings RemoveSettings\
            '%["InverterLimits/PeakPower", "InverterLimits/ContiuousPower",\
            "InverterLimits/CautionPower", "InverterLimits/OutputPowerLimit",\
            "SystemSetup/MaxDischargeCurrent",\
            "AcCurrentLimit/Preset1", "AcCurrentLimit/Preset2",\
            "AcCurrentLimit/Preset3", "AcCurrentLimit/Preset4",\
            "PvCharger/MaxPower", "GuiMods/TemperatureScale" ]' > /dev/null
    fi
    if $installEnhancedTank ; then
        logMessage "installing enhanced Tank tile"
        updateActiveFile "$tileTankFile"
        updateActiveFile "$tileTempFile"
    # restore tank file in case install was run again manually
    else
        restoreActiveFile "$tileTankFile"
        restoreActiveFile "$tileTempFile"
    fi
    
    if $shortenTankNames ; then
        dbus -y com.victronenergy.settings /Settings/"GuiMods/ShortenTankNames" SetValue 1 > /dev/null
    else
        dbus -y com.victronenergy.settings /Settings/"GuiMods/ShortenTankNames" SetValue 0 > /dev/null
    fi
    logMessage "++ Package installed"
fi


# uninstalling - check scriptAction again
# if an install step failed package needs to be removed
if [ $scriptAction == 'UNINSTALL' ] ; then
    restoreActiveFile "$deviceListFile"
    restoreActiveFile "$mainPagesFile"
    restoreActiveFile "$overviewMobileEnhancedFile"
    restoreActiveFile "$reasonMessageFile"
    restoreActiveFile "$overviewAcValues"
    restoreActiveFile "$objectAcConnection"
    restoreActiveFile "$overviewHub"
    restoreActiveFile "$overviewSolarCharger"
    restoreActiveFile "$tileTankFile"
    restoreActiveFile "$tileTempFile"
    restoreActiveFile "$powerGaugeFile"
    restoreActiveFile "$powerGaugeBatteryFile"
    restoreActiveFile "$multiFile"
    restoreActiveFile "$inverterPopupFile"
    restoreActiveFile "$acCurrentLimitPopUpFile"
    dbus -y com.victronenergy.settings /Settings RemoveSettings\
            '%["InverterLimits/PeakPower", "InverterLimits/ContiuousPower",\
            "InverterLimits/CautionPower", "InverterLimits/OutputPowerLimit",\
            "SystemSetup/MaxDischargeCurrent",\
            "AcCurrentLimit/Preset1", "AcCurrentLimit/Preset2",\
            "AcCurrentLimit/Preset3", "AcCurrentLimit/Preset4",\
            "PvCharger/MaxPower", "GuiMods/TemperatureScale", "GuiMods/ShortenTankNames" ]' > /dev/null

    logMessage "++ Package uninstalled"
fi

if $filesUpdated ; then
    restartGui=true
fi

# thats all folks - SCRIPT EXITS INSIDE THE FUNCTION
endScript
